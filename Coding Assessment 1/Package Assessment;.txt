Package Assessment;
class Employee {
    int id;
    String name;
    float basicSalary;
    float bonus;
    float netSalary;

    public Employee(int id, String name, float basicSalary) {
        this.id = id;
        this.name = name;
        this.basicSalary = basicSalary;
    }


    public void displayDetails() {
        System.out.println("Employee ID: " + id);
        System.out.println("Employee Name: " + name);
        System.out.println("Basic Salary: " + basicSalary);
        System.out.println("Bonus: " + bonus);
        System.out.println("Net Salary: " + netSalary);
    }
}

class PermanentEmployee extends Employee {
    int pf; // Provident Fund

    public PermanentEmployee(int id, String name, float basicSalary, int pf) {
        super(id, name, basicSalary);
        this.pf = pf;
    }

    // Method to calculate net salary and bonus for permanent employees
    public void calculateSalary() {
        netSalary = basicSalary - pf;
    }

    public void calculateBonus() {
        if (pf < 1000) {
            bonus = 0.10f * basicSalary;
        } else if (pf >= 1000 && pf < 1500) {
            bonus = 0.115f * basicSalary;
        } else if (pf >= 1500 && pf < 1800) {
            bonus = 0.12f * basicSalary;
        } else {
            bonus = 0.15f * basicSalary;
        }
        netSalary += bonus;
    }

    @Override
    public void displayDetails() {
        super.displayDetails();
        System.out.println("PF: " + pf);
    }
}

class TemporaryEmployee extends Employee {
    int dailyWages;
    int noOfDaysWorked;

    public TemporaryEmployee(int id, String name, int dailyWages, int noOfDaysWorked) {
        super(id, name, 0); 
        this.dailyWages = dailyWages;
        this.noOfDaysWorked = noOfDaysWorked;
    }

    
    public void calculateSalary() {
        netSalary = dailyWages * noOfDaysWorked;
    }

    public void calculateBonus() {
        if (dailyWages < 1000) {
            bonus = 0.15f * netSalary;
        } else if (dailyWages >= 1000 && dailyWages < 1500) {
            bonus = 0.12f * netSalary;
        } else if (dailyWages >= 1500 && dailyWages < 1750) {
            bonus = 0.11f * netSalary;
        } else {
            bonus = 0.08f * netSalary;
        }
        netSalary += bonus; 
    }

    @Override
    public void displayDetails() {
        System.out.println("Employee ID: " + id);
        System.out.println("Employee Name: " + name);
        System.out.println("Daily Wages: " + dailyWages);
        System.out.println("No. of Days Worked: " + noOfDaysWorked);
        System.out.println("Bonus: " + bonus);
        System.out.println("Net Salary: " + netSalary);
    }
}


public class EmployeePayrollManagement {
    public static void main(String[] args) {
        
        PermanentEmployee esther = new PermanentEmployee(101, "Esther", 25000, 1500);
        esther.calculateSalary();
        esther.calculateBonus();
        System.out.println("Permanent Employee Details:");
        esther.displayDetails();

        System.out.println();


        TemporaryEmployee ganesh = new TemporaryEmployee(102, "Ganesh", 1500, 20);
        ganesh.calculateSalary();
        ganesh.calculateBonus();
        System.out.println("Temporary Employee Details:");
        ganesh.displayDetails();
    }
}
